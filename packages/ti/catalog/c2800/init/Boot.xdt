%%{
/*
 *  Copyright (c) 2012 by Texas Instruments and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *
 *  Contributors:
 *      Texas Instruments - initial implementation
 *
 * */

%%}
%/*
% *  ======== Boot.xdt ========
% *
% *! Revision History
% *! ================
% *! 07-Jun-2011 sg     Removed CLKINDIV
% *! 24-May-2011 sg     Add support for all PLL types (SDOCM00080609).
% *! 26-May-2009 agd    SDOCM00057270 don't use xdc.runtime if Program.system == null
% *! 27-Apr-2009 cmcc   Added Xintf configuration
% *! 17-Apr-2009 agd    Created
% */
% /* Don't generate Boot_init if this is a romimage */
% if (!Program.$$isrom && (Program.build.rtsName !== null)) {
%var Boot = xdc.module("ti.catalog.c2800.init.Boot");
    extern ti_catalog_c2800_init_Boot_disableWatchdog();
    extern ti_catalog_c2800_init_Boot_configurePll280x(UInt16 pllcrDIV);
    extern ti_catalog_c2800_init_Boot_configurePll281x(UInt16 pllcrDIV, UInt16 pllstsDIVSEL);
    extern ti_catalog_c2800_init_Boot_configurePll2802x(UInt16 pllcrDIV, UInt16 pllstsDIVSEL);
    extern ti_catalog_c2800_init_Boot_configurePll2834x(UInt16 pllcrDIV, UInt16 pllstsDIVSEL);
    extern ti_catalog_c2800_init_Boot_configEzdspXintf();

#if defined(__ti__)
#pragma CODE_SECTION(ti_catalog_c2800_init_Boot_init, ".text:.bootCodeSection")
#pragma CODE_SECTION(ti_catalog_c2800_init_Boot_50usDelay, ".text:.bootCodeSection")
#endif

/*
 *  ======== ti_catalog_c2800_init_Boot_init ========
 */
Void ti_catalog_c2800_init_Boot_init()
{
%if (Boot.disableWatchdog == true) {
    ti_catalog_c2800_init_Boot_disableWatchdog();
%}
%if (Boot.configurePll == true) {
%if (Boot.pllType == Boot.Type_280x) {
    ti_catalog_c2800_init_Boot_configurePll280x(`Boot.pllcrDIV`);
%}
%else if (Boot.pllType == Boot.Type_281x) {
    ti_catalog_c2800_init_Boot_configurePll281x(`Boot.pllcrDIV`, `Boot.pllstsDIVSEL`);
%}
%else if (Boot.pllType == Boot.Type_282xx_283xx) {
    /* share function with 2802x_2803x_2806x ... */
    ti_catalog_c2800_init_Boot_configurePll2802x(`Boot.pllcrDIV`, `Boot.pllstsDIVSEL`);
%}
%else if (Boot.pllType == Boot.Type_2802x_2803x_2806x) {
    ti_catalog_c2800_init_Boot_configurePll2802x(`Boot.pllcrDIV`, `Boot.pllstsDIVSEL`);
%}
%else if (Boot.pllType == Boot.Type_2834x) {
    ti_catalog_c2800_init_Boot_configurePll2834x(`Boot.pllcrDIV`, `Boot.pllstsDIVSEL`);
%}
%}
%if (Boot.enableEzdspXintfConfig == true) {
    ti_catalog_c2800_init_Boot_configEzdspXintf();
%}
}

%var freq       =    Program.cpu.clockRate;
%var loopCount  =    (50.0 * freq) / 5.0;
%var lo16       =    loopCount & 0xffff;
%var hi16       =    (loopCount & 0xffff0000) >> 16;
/*
 *  ======== ti_catalog_c2800_init_Boot_50usDelay ========
 */
Void ti_catalog_c2800_init_Boot_50usDelay()
{
asm("   MOV     @AH,#`hi16`;\n                          \
        MOV     @AL,#`lo16`;\n                          \
");
asm("_ti_catalog_c2800_init_Boot_loop:\n                \
        SUB     ACC,#1;\n                               \
        BF      _ti_catalog_c2800_init_Boot_loop,GEQ;\n \
");
}
/*
 *  ======== ti_catalog_c2800_init_Boot_limpAbort ========
 */
Void ti_catalog_c2800_init_Boot_limpAbort(Void)
{
%var cname;
%       cname = String(Boot.limpAbortFunction);
%       cname = cname.substr(1);
    extern `cname`();
    `cname`();
}
%}

%%{
/*
 * @(#) ti.catalog.c2800.init; 1, 0, 0,250; 8-17-2012 22:13:23; /db/ztree/library/trees/platform/platform-n27x/src/
 */

%%}
