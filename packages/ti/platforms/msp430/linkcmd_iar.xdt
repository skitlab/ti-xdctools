%/* --COPYRIGHT--,EPL
% *  Copyright (c) 2012 Texas Instruments and others.
% *  All rights reserved. This program and the accompanying materials
% *  are made available under the terms of the Eclipse Public License v1.0
% *  which accompanies this distribution, and is available at
% *  http://www.eclipse.org/legal/epl-v10.html
% *
% *  Contributors:
% *      Texas Instruments - initial implementation
% *
% * --/COPYRIGHT--*/
%/*
% * ======== linkcmd.xdt ========
% *  This is template file is used to generate a linker command file for
% *  executables.  It provides a single place where we can embed information
% *  necessary to load/run executables.
% *
% *  This template is expanded after the configuration script runs and the
% *  results placed in a file (with extension .xdl) associated with the
% *  executable.
% *
% *  Linker templates are passed the following arguments:
% *     $out        - an open file stream for the generated linker
% *                   command file
% *     $args[]     - an array of zero or more libraries that should be linked
% *                   with (in the order they appear in the argument list)
% *
% *  In addition to these arguments, there is a global variable named
% *  'this' that is set as follows:
% *     this        - the program object
% */
%
%var prog = this;    /* meaningful alias for this (== xdc.cfg.Program) */
/*
 * Do not modify this file; it is automatically generated from the template
 * linkcmd_iar.xdt in the ti.platforms.msp430 package and will be overwritten.
 */

/*
 * linking libraries 
 */
%for (var i = 0; i < $args.length; i++) {
"`$args[i]`"
%}

/*
 * define xdc runtime symbols
 */
%for (var sym in prog.symbol) {
    %var inst = prog.symbol[sym];
    %if ((typeof(inst) == 'number') && sym.match(/xdc_runtime_Startup/)) {
-D`sym`=`inst`
    %}
%}

%if (prog.platform.$orig.includeLinkCmdFile) {
%var includeDir = prog.build.target.rootDir + "/config/";
%var lnkFile = includeDir + "lnk" 
%              + prog.cpu.deviceName.substring(3).toLowerCase() 
%              + ".xcl";
/*
 * define stack and heap sizes
 */
-D_STACK_SIZE=`prog.stack.toString(16)`
-D_DATA16_HEAP_SIZE=`prog.heap.toString(16)`
-D_DATA20_HEAP_SIZE=`prog.heap.toString(16)`

/*
 * Device specific linker command file 
 */
-f "`lnkFile`"
%}

%/*
% * IAR does not support NOLOAD sections yet, so the xdcmeta section is 
% * loaded in the CODE section as a temporary fix. And this section 
% * allocation is commented out for now.
% */
%/* get section allocations */
%var _utils = xdc.loadCapsule("ti/platforms/msp430/linkUtils_iar.xs");
%var sections = _utils.genSections(prog);
%//`sections`

%/* force linker to include xdcmeta */
%var metasymbols = "__PLAT__,__ISA__,__ASM__,__TARG__";
%if (prog.build.target.binaryParser != null) {
%    metasymbols += ",__TRDR__";
%}
-g`metasymbols`
